version: '3.9'
services:
  app:
    build:
      context: ./app/
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 8011:8080
    volumes:
      - ./app:/app
    depends_on:
      - database
    healthcheck:
      test: [ "CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')" ]
      interval: 60s
      timeout: 20s
      retries: 3
      start_period: 30s
    networks:
      - llm-sport-network
  # rabbitmq:
  #   image: rabbitmq:4.0.9-management-alpine
  #   hostname: rabbitmq
  #   restart: on-failure
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rmuser
  #     - RABBITMQ_DEFAULT_PASS=rmpassword
  #     - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
  #   volumes:
  #     - rabbitmq_volume:/var/lib/rabbitmq/data
  #   ports:
  #     - 15672:15672
  #     - 5672:5672
  #   healthcheck:
  #     test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
  #     interval: 60s
  #     timeout: 20s
  #     retries: 3
  #   networks:
  #     - llm-sport-network
  web:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - llm-sport-network

  database:
    image: postgres:16-alpine
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    ports:
      - 5430:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres_db
    networks:
      - llm-sport-network
#   ml_worker1:
#     build:
#       context: ./ml_worker/
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     environment:
#       DATABASE_URL: postgresql+asyncpg://postgress:postgres@database:5432/postgres_db
#     env_file:
#       - ./ml_worker/.env
#     volumes:
#       - ./ml_worker:/app
#       - ./app:/app
#     depends_on:
#       - database
#       - rabbitmq
#     networks:
#       - llm-sport-network
#   ml_worker2:
#     build:
#       context: ./ml_worker/
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     environment:
#       DATABASE_URL: postgresql+asyncpg://postgress:postgres@database:5432/postgres_db
#     env_file:
#       - ./ml_worker/.env
#     volumes:
#       - ./ml_worker:/app
#       - ./app:/app
#     depends_on:
#       - database
#       - rabbitmq
#     networks:
#       - llm-sport-network
volumes:
  postgres_volume:
  rabbitmq_volume:


networks:
  llm-sport-network:
    name: llm-sport-network
    driver: bridge
